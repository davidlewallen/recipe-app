// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RecipeModal component should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RecipeModal
    deleteRecipe={[MockFunction]}
    handleModalClose={[MockFunction]}
    selectedRecipe={
      Object {
        "ingredients": Array [
          "1",
        ],
        "instructions": Array [
          "1",
        ],
        "title": "test",
        "totalTime": "1 hour",
        "url": Object {
          "href": "randomurl.com",
        },
      }
    }
    showModal={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "animation": true,
      "autoFocus": true,
      "backdrop": true,
      "bsClass": "modal",
      "children": Array [
        <ModalHeader
          bsClass="modal-header"
          className="header"
          closeButton={true}
          closeLabel="Close"
        >
          <ModalTitle
            bsClass="modal-title"
            className="title"
            componentClass="h4"
          >
            <span>
              test
            </span>
            <span
              className="total-time"
            >
              Total Time: 
              1 hour
            </span>
          </ModalTitle>
        </ModalHeader>,
        <ModalBody
          bsClass="modal-body"
          className="body"
          componentClass="div"
        >
          <div
            className="ingredient-title"
          >
            Ingredients:
          </div>
          <div
            className="ingredient"
          >
            - 
            1
          </div>
          <div
            className="instruction-title"
          >
            Instructions:
          </div>
          <div
            className="instruction"
          >
            1
          </div>
        </ModalBody>,
        <ModalFooter
          bsClass="modal-footer"
          componentClass="div"
        >
          <a
            className="recipe-link"
            href="randomurl.com"
            target="_blank"
          >
            Click here to view original recipe
          </a>
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsSize="small"
            bsStyle="danger"
            disabled={false}
            onClick={[Function]}
          >
            Delete
          </Button>
        </ModalFooter>,
      ],
      "className": "recipe-modal",
      "dialogComponentClass": [Function],
      "enforceFocus": true,
      "keyboard": true,
      "manager": ModalManager {
        "add": [Function],
        "containers": Array [],
        "data": Array [],
        "handleContainerOverflow": true,
        "hideSiblingNodes": true,
        "isTopModal": [Function],
        "modals": Array [],
        "remove": [Function],
      },
      "onHide": [MockFunction],
      "renderBackdrop": [Function],
      "restoreFocus": true,
      "show": false,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "modal-header",
          "children": <ModalTitle
            bsClass="modal-title"
            className="title"
            componentClass="h4"
          >
            <span>
              test
            </span>
            <span
              className="total-time"
            >
              Total Time: 
              1 hour
            </span>
          </ModalTitle>,
          "className": "header",
          "closeButton": true,
          "closeLabel": "Close",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "modal-title",
            "children": Array [
              <span>
                test
              </span>,
              <span
                className="total-time"
              >
                Total Time: 
                1 hour
              </span>,
            ],
            "className": "title",
            "componentClass": "h4",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "test",
              },
              "ref": null,
              "rendered": "test",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Total Time: ",
                  "1 hour",
                ],
                "className": "total-time",
              },
              "ref": null,
              "rendered": Array [
                "Total Time: ",
                "1 hour",
              ],
              "type": "span",
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "modal-body",
          "children": Array [
            <div
              className="ingredient-title"
            >
              Ingredients:
            </div>,
            Array [
              <div
                className="ingredient"
              >
                - 
                1
              </div>,
            ],
            <div
              className="instruction-title"
            >
              Instructions:
            </div>,
            Array [
              <div
                className="instruction"
              >
                1
              </div>,
            ],
          ],
          "className": "body",
          "componentClass": "div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Ingredients:",
              "className": "ingredient-title",
            },
            "ref": null,
            "rendered": "Ingredients:",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "a347ccac-5c74-51c8-b109-9dea71b3111e",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "- ",
                "1",
              ],
              "className": "ingredient",
            },
            "ref": null,
            "rendered": Array [
              "- ",
              "1",
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Instructions:",
              "className": "instruction-title",
            },
            "ref": null,
            "rendered": "Instructions:",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "a347ccac-5c74-51c8-b109-9dea71b3111e",
            "nodeType": "host",
            "props": Object {
              "children": "1",
              "className": "instruction",
            },
            "ref": null,
            "rendered": "1",
            "type": "div",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "modal-footer",
          "children": Array [
            <a
              className="recipe-link"
              href="randomurl.com"
              target="_blank"
            >
              Click here to view original recipe
            </a>,
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsSize="small"
              bsStyle="danger"
              disabled={false}
              onClick={[Function]}
            >
              Delete
            </Button>,
          ],
          "componentClass": "div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Click here to view original recipe",
              "className": "recipe-link",
              "href": "randomurl.com",
              "target": "_blank",
            },
            "ref": null,
            "rendered": "Click here to view original recipe",
            "type": "a",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "active": false,
              "block": false,
              "bsClass": "btn",
              "bsSize": "small",
              "bsStyle": "danger",
              "children": "Delete",
              "disabled": false,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Delete",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "animation": true,
        "autoFocus": true,
        "backdrop": true,
        "bsClass": "modal",
        "children": Array [
          <ModalHeader
            bsClass="modal-header"
            className="header"
            closeButton={true}
            closeLabel="Close"
          >
            <ModalTitle
              bsClass="modal-title"
              className="title"
              componentClass="h4"
            >
              <span>
                test
              </span>
              <span
                className="total-time"
              >
                Total Time: 
                1 hour
              </span>
            </ModalTitle>
          </ModalHeader>,
          <ModalBody
            bsClass="modal-body"
            className="body"
            componentClass="div"
          >
            <div
              className="ingredient-title"
            >
              Ingredients:
            </div>
            <div
              className="ingredient"
            >
              - 
              1
            </div>
            <div
              className="instruction-title"
            >
              Instructions:
            </div>
            <div
              className="instruction"
            >
              1
            </div>
          </ModalBody>,
          <ModalFooter
            bsClass="modal-footer"
            componentClass="div"
          >
            <a
              className="recipe-link"
              href="randomurl.com"
              target="_blank"
            >
              Click here to view original recipe
            </a>
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsSize="small"
              bsStyle="danger"
              disabled={false}
              onClick={[Function]}
            >
              Delete
            </Button>
          </ModalFooter>,
        ],
        "className": "recipe-modal",
        "dialogComponentClass": [Function],
        "enforceFocus": true,
        "keyboard": true,
        "manager": ModalManager {
          "add": [Function],
          "containers": Array [],
          "data": Array [],
          "handleContainerOverflow": true,
          "hideSiblingNodes": true,
          "isTopModal": [Function],
          "modals": Array [],
          "remove": [Function],
        },
        "onHide": [MockFunction],
        "renderBackdrop": [Function],
        "restoreFocus": true,
        "show": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "modal-header",
            "children": <ModalTitle
              bsClass="modal-title"
              className="title"
              componentClass="h4"
            >
              <span>
                test
              </span>
              <span
                className="total-time"
              >
                Total Time: 
                1 hour
              </span>
            </ModalTitle>,
            "className": "header",
            "closeButton": true,
            "closeLabel": "Close",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "modal-title",
              "children": Array [
                <span>
                  test
                </span>,
                <span
                  className="total-time"
                >
                  Total Time: 
                  1 hour
                </span>,
              ],
              "className": "title",
              "componentClass": "h4",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "test",
                },
                "ref": null,
                "rendered": "test",
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Total Time: ",
                    "1 hour",
                  ],
                  "className": "total-time",
                },
                "ref": null,
                "rendered": Array [
                  "Total Time: ",
                  "1 hour",
                ],
                "type": "span",
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "modal-body",
            "children": Array [
              <div
                className="ingredient-title"
              >
                Ingredients:
              </div>,
              Array [
                <div
                  className="ingredient"
                >
                  - 
                  1
                </div>,
              ],
              <div
                className="instruction-title"
              >
                Instructions:
              </div>,
              Array [
                <div
                  className="instruction"
                >
                  1
                </div>,
              ],
            ],
            "className": "body",
            "componentClass": "div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Ingredients:",
                "className": "ingredient-title",
              },
              "ref": null,
              "rendered": "Ingredients:",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": "a347ccac-5c74-51c8-b109-9dea71b3111e",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "- ",
                  "1",
                ],
                "className": "ingredient",
              },
              "ref": null,
              "rendered": Array [
                "- ",
                "1",
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Instructions:",
                "className": "instruction-title",
              },
              "ref": null,
              "rendered": "Instructions:",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": "a347ccac-5c74-51c8-b109-9dea71b3111e",
              "nodeType": "host",
              "props": Object {
                "children": "1",
                "className": "instruction",
              },
              "ref": null,
              "rendered": "1",
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "modal-footer",
            "children": Array [
              <a
                className="recipe-link"
                href="randomurl.com"
                target="_blank"
              >
                Click here to view original recipe
              </a>,
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsSize="small"
                bsStyle="danger"
                disabled={false}
                onClick={[Function]}
              >
                Delete
              </Button>,
            ],
            "componentClass": "div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Click here to view original recipe",
                "className": "recipe-link",
                "href": "randomurl.com",
                "target": "_blank",
              },
              "ref": null,
              "rendered": "Click here to view original recipe",
              "type": "a",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "active": false,
                "block": false,
                "bsClass": "btn",
                "bsSize": "small",
                "bsStyle": "danger",
                "children": "Delete",
                "disabled": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Delete",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`RecipeModal component should match snapshot with modal open 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RecipeModal
    deleteRecipe={[MockFunction]}
    handleModalClose={[MockFunction]}
    selectedRecipe={
      Object {
        "ingredients": Array [
          "1",
        ],
        "instructions": Array [
          "1",
        ],
        "title": "test",
        "totalTime": "1 hour",
        "url": Object {
          "href": "randomurl.com",
        },
      }
    }
    showModal={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "animation": true,
      "autoFocus": true,
      "backdrop": true,
      "bsClass": "modal",
      "children": Array [
        <ModalHeader
          bsClass="modal-header"
          className="header"
          closeButton={true}
          closeLabel="Close"
        >
          <ModalTitle
            bsClass="modal-title"
            className="title"
            componentClass="h4"
          >
            <span>
              test
            </span>
            <span
              className="total-time"
            >
              Total Time: 
              1 hour
            </span>
          </ModalTitle>
        </ModalHeader>,
        <ModalBody
          bsClass="modal-body"
          className="body"
          componentClass="div"
        >
          <div
            className="ingredient-title"
          >
            Ingredients:
          </div>
          <div
            className="ingredient"
          >
            - 
            1
          </div>
          <div
            className="instruction-title"
          >
            Instructions:
          </div>
          <div
            className="instruction"
          >
            1
          </div>
        </ModalBody>,
        <ModalFooter
          bsClass="modal-footer"
          componentClass="div"
        >
          <a
            className="recipe-link"
            href="randomurl.com"
            target="_blank"
          >
            Click here to view original recipe
          </a>
          <Button
            active={false}
            block={false}
            bsClass="btn"
            bsSize="small"
            bsStyle="danger"
            disabled={false}
            onClick={[Function]}
          >
            Delete
          </Button>
        </ModalFooter>,
      ],
      "className": "recipe-modal",
      "dialogComponentClass": [Function],
      "enforceFocus": true,
      "keyboard": true,
      "manager": ModalManager {
        "add": [Function],
        "containers": Array [],
        "data": Array [],
        "handleContainerOverflow": true,
        "hideSiblingNodes": true,
        "isTopModal": [Function],
        "modals": Array [],
        "remove": [Function],
      },
      "onHide": [MockFunction],
      "renderBackdrop": [Function],
      "restoreFocus": true,
      "show": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "modal-header",
          "children": <ModalTitle
            bsClass="modal-title"
            className="title"
            componentClass="h4"
          >
            <span>
              test
            </span>
            <span
              className="total-time"
            >
              Total Time: 
              1 hour
            </span>
          </ModalTitle>,
          "className": "header",
          "closeButton": true,
          "closeLabel": "Close",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "modal-title",
            "children": Array [
              <span>
                test
              </span>,
              <span
                className="total-time"
              >
                Total Time: 
                1 hour
              </span>,
            ],
            "className": "title",
            "componentClass": "h4",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "test",
              },
              "ref": null,
              "rendered": "test",
              "type": "span",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Total Time: ",
                  "1 hour",
                ],
                "className": "total-time",
              },
              "ref": null,
              "rendered": Array [
                "Total Time: ",
                "1 hour",
              ],
              "type": "span",
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "modal-body",
          "children": Array [
            <div
              className="ingredient-title"
            >
              Ingredients:
            </div>,
            Array [
              <div
                className="ingredient"
              >
                - 
                1
              </div>,
            ],
            <div
              className="instruction-title"
            >
              Instructions:
            </div>,
            Array [
              <div
                className="instruction"
              >
                1
              </div>,
            ],
          ],
          "className": "body",
          "componentClass": "div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Ingredients:",
              "className": "ingredient-title",
            },
            "ref": null,
            "rendered": "Ingredients:",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "a347ccac-5c74-51c8-b109-9dea71b3111e",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "- ",
                "1",
              ],
              "className": "ingredient",
            },
            "ref": null,
            "rendered": Array [
              "- ",
              "1",
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Instructions:",
              "className": "instruction-title",
            },
            "ref": null,
            "rendered": "Instructions:",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "a347ccac-5c74-51c8-b109-9dea71b3111e",
            "nodeType": "host",
            "props": Object {
              "children": "1",
              "className": "instruction",
            },
            "ref": null,
            "rendered": "1",
            "type": "div",
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "modal-footer",
          "children": Array [
            <a
              className="recipe-link"
              href="randomurl.com"
              target="_blank"
            >
              Click here to view original recipe
            </a>,
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsSize="small"
              bsStyle="danger"
              disabled={false}
              onClick={[Function]}
            >
              Delete
            </Button>,
          ],
          "componentClass": "div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Click here to view original recipe",
              "className": "recipe-link",
              "href": "randomurl.com",
              "target": "_blank",
            },
            "ref": null,
            "rendered": "Click here to view original recipe",
            "type": "a",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "active": false,
              "block": false,
              "bsClass": "btn",
              "bsSize": "small",
              "bsStyle": "danger",
              "children": "Delete",
              "disabled": false,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Delete",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "animation": true,
        "autoFocus": true,
        "backdrop": true,
        "bsClass": "modal",
        "children": Array [
          <ModalHeader
            bsClass="modal-header"
            className="header"
            closeButton={true}
            closeLabel="Close"
          >
            <ModalTitle
              bsClass="modal-title"
              className="title"
              componentClass="h4"
            >
              <span>
                test
              </span>
              <span
                className="total-time"
              >
                Total Time: 
                1 hour
              </span>
            </ModalTitle>
          </ModalHeader>,
          <ModalBody
            bsClass="modal-body"
            className="body"
            componentClass="div"
          >
            <div
              className="ingredient-title"
            >
              Ingredients:
            </div>
            <div
              className="ingredient"
            >
              - 
              1
            </div>
            <div
              className="instruction-title"
            >
              Instructions:
            </div>
            <div
              className="instruction"
            >
              1
            </div>
          </ModalBody>,
          <ModalFooter
            bsClass="modal-footer"
            componentClass="div"
          >
            <a
              className="recipe-link"
              href="randomurl.com"
              target="_blank"
            >
              Click here to view original recipe
            </a>
            <Button
              active={false}
              block={false}
              bsClass="btn"
              bsSize="small"
              bsStyle="danger"
              disabled={false}
              onClick={[Function]}
            >
              Delete
            </Button>
          </ModalFooter>,
        ],
        "className": "recipe-modal",
        "dialogComponentClass": [Function],
        "enforceFocus": true,
        "keyboard": true,
        "manager": ModalManager {
          "add": [Function],
          "containers": Array [],
          "data": Array [],
          "handleContainerOverflow": true,
          "hideSiblingNodes": true,
          "isTopModal": [Function],
          "modals": Array [],
          "remove": [Function],
        },
        "onHide": [MockFunction],
        "renderBackdrop": [Function],
        "restoreFocus": true,
        "show": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "modal-header",
            "children": <ModalTitle
              bsClass="modal-title"
              className="title"
              componentClass="h4"
            >
              <span>
                test
              </span>
              <span
                className="total-time"
              >
                Total Time: 
                1 hour
              </span>
            </ModalTitle>,
            "className": "header",
            "closeButton": true,
            "closeLabel": "Close",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "modal-title",
              "children": Array [
                <span>
                  test
                </span>,
                <span
                  className="total-time"
                >
                  Total Time: 
                  1 hour
                </span>,
              ],
              "className": "title",
              "componentClass": "h4",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "test",
                },
                "ref": null,
                "rendered": "test",
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Total Time: ",
                    "1 hour",
                  ],
                  "className": "total-time",
                },
                "ref": null,
                "rendered": Array [
                  "Total Time: ",
                  "1 hour",
                ],
                "type": "span",
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "modal-body",
            "children": Array [
              <div
                className="ingredient-title"
              >
                Ingredients:
              </div>,
              Array [
                <div
                  className="ingredient"
                >
                  - 
                  1
                </div>,
              ],
              <div
                className="instruction-title"
              >
                Instructions:
              </div>,
              Array [
                <div
                  className="instruction"
                >
                  1
                </div>,
              ],
            ],
            "className": "body",
            "componentClass": "div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Ingredients:",
                "className": "ingredient-title",
              },
              "ref": null,
              "rendered": "Ingredients:",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": "a347ccac-5c74-51c8-b109-9dea71b3111e",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "- ",
                  "1",
                ],
                "className": "ingredient",
              },
              "ref": null,
              "rendered": Array [
                "- ",
                "1",
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Instructions:",
                "className": "instruction-title",
              },
              "ref": null,
              "rendered": "Instructions:",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": "a347ccac-5c74-51c8-b109-9dea71b3111e",
              "nodeType": "host",
              "props": Object {
                "children": "1",
                "className": "instruction",
              },
              "ref": null,
              "rendered": "1",
              "type": "div",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "modal-footer",
            "children": Array [
              <a
                className="recipe-link"
                href="randomurl.com"
                target="_blank"
              >
                Click here to view original recipe
              </a>,
              <Button
                active={false}
                block={false}
                bsClass="btn"
                bsSize="small"
                bsStyle="danger"
                disabled={false}
                onClick={[Function]}
              >
                Delete
              </Button>,
            ],
            "componentClass": "div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Click here to view original recipe",
                "className": "recipe-link",
                "href": "randomurl.com",
                "target": "_blank",
              },
              "ref": null,
              "rendered": "Click here to view original recipe",
              "type": "a",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "active": false,
                "block": false,
                "bsClass": "btn",
                "bsSize": "small",
                "bsStyle": "danger",
                "children": "Delete",
                "disabled": false,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Delete",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
