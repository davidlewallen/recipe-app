// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header component logo should link to "/" if isAuth is false 1`] = `
<Uncontrolled(Navbar)
  bsStyle="default"
  collapseOnSelect={true}
  fluid={true}
  inverse={true}
>
  <NavbarHeader>
    <NavbarBrand>
      <Link
        replace={false}
        to="/"
      >
        My Saved Recipes
      </Link>
    </NavbarBrand>
  </NavbarHeader>
</Uncontrolled(Navbar)>
`;

exports[`Header component logo should link to "/dashboard" if isAuth is true 1`] = `
<Uncontrolled(Navbar)
  bsStyle="default"
  collapseOnSelect={true}
  fluid={true}
  inverse={true}
>
  <NavbarHeader>
    <NavbarBrand>
      <Link
        replace={false}
        to="/dashboard"
      >
        My Saved Recipes
      </Link>
    </NavbarBrand>
    <NavbarToggle />
  </NavbarHeader>
  <NavbarCollapse>
    <Nav
      bsClass="nav"
      justified={false}
      pullLeft={false}
      pullRight={true}
      stacked={false}
    >
      <NavItem
        active={false}
        disabled={false}
        eventKey={1}
        onClick={
          [MockFunction] {
            "calls": Array [
              Array [],
            ],
          }
        }
      >
        + Add Recipe
      </NavItem>
      <LinkContainer
        activeClassName="active"
        exact={false}
        replace={false}
        strict={false}
        to="/account"
      >
        <NavItem
          active={false}
          disabled={false}
          eventKey={2}
        >
          Account
        </NavItem>
      </LinkContainer>
      <NavItem
        active={false}
        disabled={false}
        eventKey={3}
        onClick={
          [MockFunction] {
            "calls": Array [
              Array [],
            ],
          }
        }
      >
        Logout
      </NavItem>
    </Nav>
  </NavbarCollapse>
</Uncontrolled(Navbar)>
`;

exports[`Header component should display + Add Recipe, Account, Logout if isAuth is true 1`] = `
<Uncontrolled(Navbar)
  bsStyle="default"
  collapseOnSelect={true}
  fluid={true}
  inverse={true}
>
  <NavbarHeader>
    <NavbarBrand>
      <Link
        replace={false}
        to="/dashboard"
      >
        My Saved Recipes
      </Link>
    </NavbarBrand>
    <NavbarToggle />
  </NavbarHeader>
  <NavbarCollapse>
    <Nav
      bsClass="nav"
      justified={false}
      pullLeft={false}
      pullRight={true}
      stacked={false}
    >
      <NavItem
        active={false}
        disabled={false}
        eventKey={1}
        onClick={
          [MockFunction] {
            "calls": Array [
              Array [],
            ],
          }
        }
      >
        + Add Recipe
      </NavItem>
      <LinkContainer
        activeClassName="active"
        exact={false}
        replace={false}
        strict={false}
        to="/account"
      >
        <NavItem
          active={false}
          disabled={false}
          eventKey={2}
        >
          Account
        </NavItem>
      </LinkContainer>
      <NavItem
        active={false}
        disabled={false}
        eventKey={3}
        onClick={
          [MockFunction] {
            "calls": Array [
              Array [],
            ],
          }
        }
      >
        Logout
      </NavItem>
    </Nav>
  </NavbarCollapse>
</Uncontrolled(Navbar)>
`;

exports[`Header component should display menu if isAuth is true 1`] = `
<Uncontrolled(Navbar)
  bsStyle="default"
  collapseOnSelect={true}
  fluid={true}
  inverse={true}
>
  <NavbarHeader>
    <NavbarBrand>
      <Link
        replace={false}
        to="/dashboard"
      >
        My Saved Recipes
      </Link>
    </NavbarBrand>
    <NavbarToggle />
  </NavbarHeader>
  <NavbarCollapse>
    <Nav
      bsClass="nav"
      justified={false}
      pullLeft={false}
      pullRight={true}
      stacked={false}
    >
      <NavItem
        active={false}
        disabled={false}
        eventKey={1}
        onClick={
          [MockFunction] {
            "calls": Array [
              Array [],
            ],
          }
        }
      >
        + Add Recipe
      </NavItem>
      <LinkContainer
        activeClassName="active"
        exact={false}
        replace={false}
        strict={false}
        to="/account"
      >
        <NavItem
          active={false}
          disabled={false}
          eventKey={2}
        >
          Account
        </NavItem>
      </LinkContainer>
      <NavItem
        active={false}
        disabled={false}
        eventKey={3}
        onClick={
          [MockFunction] {
            "calls": Array [
              Array [],
            ],
          }
        }
      >
        Logout
      </NavItem>
    </Nav>
  </NavbarCollapse>
</Uncontrolled(Navbar)>
`;

exports[`Header component should match snapshot 1`] = `
<Uncontrolled(Navbar)
  bsStyle="default"
  collapseOnSelect={true}
  fluid={true}
  inverse={true}
>
  <NavbarHeader>
    <NavbarBrand>
      <Link
        replace={false}
        to="/dashboard"
      >
        My Saved Recipes
      </Link>
    </NavbarBrand>
    <NavbarToggle />
  </NavbarHeader>
  <NavbarCollapse>
    <Nav
      bsClass="nav"
      justified={false}
      pullLeft={false}
      pullRight={true}
      stacked={false}
    >
      <NavItem
        active={false}
        disabled={false}
        eventKey={1}
        onClick={[MockFunction]}
      >
        + Add Recipe
      </NavItem>
      <LinkContainer
        activeClassName="active"
        exact={false}
        replace={false}
        strict={false}
        to="/account"
      >
        <NavItem
          active={false}
          disabled={false}
          eventKey={2}
        >
          Account
        </NavItem>
      </LinkContainer>
      <NavItem
        active={false}
        disabled={false}
        eventKey={3}
        onClick={[MockFunction]}
      >
        Logout
      </NavItem>
    </Nav>
  </NavbarCollapse>
</Uncontrolled(Navbar)>
`;

exports[`Header component should not display + Add Recipe, Account, and Logout if isAuth is false 1`] = `
<Uncontrolled(Navbar)
  bsStyle="default"
  collapseOnSelect={true}
  fluid={true}
  inverse={true}
>
  <NavbarHeader>
    <NavbarBrand>
      <Link
        replace={false}
        to="/"
      >
        My Saved Recipes
      </Link>
    </NavbarBrand>
  </NavbarHeader>
</Uncontrolled(Navbar)>
`;

exports[`Header component should not display menu if isAuth is false 1`] = `
<Uncontrolled(Navbar)
  bsStyle="default"
  collapseOnSelect={true}
  fluid={true}
  inverse={true}
>
  <NavbarHeader>
    <NavbarBrand>
      <Link
        replace={false}
        to="/"
      >
        My Saved Recipes
      </Link>
    </NavbarBrand>
  </NavbarHeader>
</Uncontrolled(Navbar)>
`;
