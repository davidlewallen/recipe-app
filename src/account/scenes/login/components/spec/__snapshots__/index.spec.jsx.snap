// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Login component snapshot test should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    error={
      Object {
        "message": "",
        "value": false,
      }
    }
    handlePassword={[Function]}
    handleUsername={[Function]}
    login={[Function]}
    password="testPassword"
    username="testUsername"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        false,
        <form
          className="login"
        >
          <input
            className="username-input"
            onChange={[Function]}
            placeholder="Username"
            value="testUsername"
          />
          <input
            className="password-input"
            onChange={[Function]}
            placeholder="Password"
            type="password"
            value="testPassword"
          />
          <button
            className="login-button"
            onClick={[Function]}
          >
            Login
          </button>
        </form>,
        <div>
          <p>
            New to My Saved Recipes? 
            <Link
              replace={false}
              to="/account/register"
            >
              Create an account.
            </Link>
          </p>
        </div>,
      ],
      "className": "login-container",
    },
    "ref": null,
    "rendered": Array [
      false,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              className="username-input"
              onChange={[Function]}
              placeholder="Username"
              value="testUsername"
            />,
            <input
              className="password-input"
              onChange={[Function]}
              placeholder="Password"
              type="password"
              value="testPassword"
            />,
            <button
              className="login-button"
              onClick={[Function]}
            >
              Login
            </button>,
          ],
          "className": "login",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "username-input",
              "onChange": [Function],
              "placeholder": "Username",
              "value": "testUsername",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "password-input",
              "onChange": [Function],
              "placeholder": "Password",
              "type": "password",
              "value": "testPassword",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Login",
              "className": "login-button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Login",
            "type": "button",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <p>
            New to My Saved Recipes? 
            <Link
              replace={false}
              to="/account/register"
            >
              Create an account.
            </Link>
          </p>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "New to My Saved Recipes? ",
              <Link
                replace={false}
                to="/account/register"
              >
                Create an account.
              </Link>,
            ],
          },
          "ref": null,
          "rendered": Array [
            "New to My Saved Recipes? ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Create an account.",
                "replace": false,
                "to": "/account/register",
              },
              "ref": null,
              "rendered": "Create an account.",
              "type": [Function],
            },
          ],
          "type": "p",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          false,
          <form
            className="login"
          >
            <input
              className="username-input"
              onChange={[Function]}
              placeholder="Username"
              value="testUsername"
            />
            <input
              className="password-input"
              onChange={[Function]}
              placeholder="Password"
              type="password"
              value="testPassword"
            />
            <button
              className="login-button"
              onClick={[Function]}
            >
              Login
            </button>
          </form>,
          <div>
            <p>
              New to My Saved Recipes? 
              <Link
                replace={false}
                to="/account/register"
              >
                Create an account.
              </Link>
            </p>
          </div>,
        ],
        "className": "login-container",
      },
      "ref": null,
      "rendered": Array [
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                className="username-input"
                onChange={[Function]}
                placeholder="Username"
                value="testUsername"
              />,
              <input
                className="password-input"
                onChange={[Function]}
                placeholder="Password"
                type="password"
                value="testPassword"
              />,
              <button
                className="login-button"
                onClick={[Function]}
              >
                Login
              </button>,
            ],
            "className": "login",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "username-input",
                "onChange": [Function],
                "placeholder": "Username",
                "value": "testUsername",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "password-input",
                "onChange": [Function],
                "placeholder": "Password",
                "type": "password",
                "value": "testPassword",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Login",
                "className": "login-button",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Login",
              "type": "button",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <p>
              New to My Saved Recipes? 
              <Link
                replace={false}
                to="/account/register"
              >
                Create an account.
              </Link>
            </p>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "New to My Saved Recipes? ",
                <Link
                  replace={false}
                  to="/account/register"
                >
                  Create an account.
                </Link>,
              ],
            },
            "ref": null,
            "rendered": Array [
              "New to My Saved Recipes? ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Create an account.",
                  "replace": false,
                  "to": "/account/register",
                },
                "ref": null,
                "rendered": "Create an account.",
                "type": [Function],
              },
            ],
            "type": "p",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
